from typing import Dict

from nuchabäl import chijun

from .நீட்டிப்புகள் import மாயர், பதினமம்
from .வார்ப்புரு import நீட்டிப்பு_வார்ப்புரு

_நீட்டிப்புகள் = {}  # type: Dict[str, நீட்டிப்பு_வார்ப்புரு]


def நீட்டிப்பு_பதிவு(நீட்டிப்பு):
    if isinstance(நீட்டிப்பு, நீட்டிப்பு_வார்ப்புரு):
        நீட்டிப்பு = [நீட்டிப்பு]
    for நீ in நீட்டிப்பு:
        for மொ in நீ.மொழிகள்():
            _நீட்டிப்புகள்[மொ] = நீ


நீட்டிப்பு_பதிவு([மாயர்(), பதினமம்()])


def _நீட்டிப்பு_தேடல்(மொழி=None):
    if மொழி is not None:
        அமைப்புகள் = _மொழி_சரிப்பார்க்க(மொழி)
        சாத்தியங்கள் = [next(_நீட்டிப்புகள்[மொ] for மொ in அமைப்புகள் if மொ and மொ in _நீட்டிப்புகள்)]
    else:
        சாத்தியங்கள் = list(set(_நீட்டிப்புகள்.values()))

    return மொழி, சாத்தியங்கள்


def _மொழி_சரிப்பார்க்க(மொழி):
    try:
        அமைப்பு = chijun.rajilanïk(மொழி)
    except ValueError:
        அமைப்பு = None

    try:
        குறி = chijun.runuk(chijun.ruchabäl(மொழி))
    except ValueError:
        குறி = None
    return (அமைப்பு, குறி, மொழி)


def எண்ணுக்கு(உரை, மொழி=None):
    """

    Parameters
    ----------
    உரை : str
    மொழி : str

    Returns
    -------
    int | float

    Examples
    --------
    >>> எண்ணுக்கு('१२३४५.६७')
    12345.67
    >>> எண்ணுக்கு('௱௨௰௩,௪')
    123.4

    """

    சாத்தியங்கள் = _நீட்டிப்பு_தேடல்(மொழி)[1]

    for நீ in சாத்தியங்கள்:
        try:
            return நீ.எண்ணுக்கு(உரை, மொழி=மொழி)
        except ValueError:
            pass
    raise ValueError(உரை)


def உரைக்கு(எண், மொழி, மொழி_மூலம்=None, தளம்=None):
    """

    Parameters
    ----------
    எண் : float | int | str
    மொழி : str
    மொழி_மூலம் : str
    தளம் :

    Returns
    -------

    Examples
    --------
    >>> உரைக்கு(1234, 'தமிழ்', தளம்=None)
    '௧௨௩௪'

    >>> உரைக்கு(123.456789, 'தமிழ்', தளம்=None)
    '௧௨௩.௪௫௬௭௮௯'

    >>> உரைக்கு(-123.456789, 'தமிழ்', தளம்=None)
    '-௧௨௩.௪௫௬௭௮௯'

    >>> உரைக்கு(123.456789, '汉语')
    '一二三.四五六七八九'

    >>> உரைக்கு(123.456789, 'ગુજરાતી')
    '૧૨૩.૪૫૬૭૮૯'

    """

    if isinstance(எண், str):
        மொழி_மூலம், சாத்தியங்கள் = _நீட்டிப்பு_தேடல்(மொழி_மூலம்)
        எண்_மூலம் = None
        for நீ in சாத்தியங்கள்:
            try:
                எண்_மூலம் = நீ.எண்ணுக்கு(எண், மொழி=மொழி_மூலம்)
                break
            except (ValueError, KeyError):
                pass
        if எண்_மூலம் is None:
            raise ValueError
    else:
        எண்_மூலம் = எண்

    மொழி, சாத்தியங்கள் = _நீட்டிப்பு_தேடல்(மொழி)
    for நீ in சாத்தியங்கள்:
        try:
            return நீ.உரைக்கு(எண்_மூலம், மொழி=மொழி, மொழி_மூலம்=மொழி_மூலம், தளம்=தளம்)
        except ValueError:
            pass
    raise ValueError(எண், மொழி)


def வழவெளி(மொழி=None):
    """

    Parameters
    ----------
    மொழி : str | list[str]

    Returns
    -------
    str
    """

    if isinstance(மொழி, str):
        மொழி = [மொழி]

    சாத்தியங்கள் = [_நீட்டிப்பு_தேடல்(மொ) for மொ in மொழி]

    return '|'.join('({})'.format(நீ[0].வழவெளி(மொ)) for மொ, நீ in சாத்தியங்கள்)


def மொழிகள்():
    return list(_நீட்டிப்புகள்)
