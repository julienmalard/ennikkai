import re

from .வார்ப்புரு import எண்குறிமுறைமை


class இடஞ்சார்(எண்குறிமுறைமை):
    def __init__(தன், பெயர், ஒருங்குறி, குறிகள், பிரிப்பு):
        தன்.குறிகள் = குறிகள்
        தன்.பிரிப்பு = பிரிப்பு
        தன்.அடிமானம் = len(குறிகள்)

        super().__init__(பெயர், ஒருங்குறி)

    def எண்ணுக்கு(தன், உரை):
        if தன்.அடிமானம் == 10:
            if any(பி in உரை for பி in தன்.பிரிப்பு):
                உரை = re.sub(rf'[{தன்.பிரிப்பு}]', '.', உரை)
                return float(உரை)
            else:
                return int(உரை)
        else:
            அடி = தன்.அடிமானம்

            எண் = 0

            try:
                முழு, தசம = re.split(rf'[{தன்.பிரிப்பு}]', உரை)
            except ValueError:
                முழு = உரை
                தசம = None

            for அ in முழு:
                எண் *= அடி
                எண் += அக_தகவல்கள்[அ]

            if தசம is not None:
                த = அடி
                for எ, அ in enumerate(தசம):
                    எ_சுற்று = len(_உரை(1 / த))
                    எண் += அக_தகவல்கள்[அ] / த
                    எண் = round(எண், எ_சுற்று)
                    த *= அடி

        if '.' in உரை:
            return float(எண்)
        else:
            return int(எண்)

    def உரைக்கு(தன், எண்):
        உரை = str(எண்)
        for எ, குறி in enumerate(தன்.குறிகள்):
            if குறி in உரை:
                உரை = உரை.replace(str(எ), குறி)
        if '.' in உரை:
            உரை = உரை.replace('.', தன்.பிரிப்பு[0])
        return உரை

    def சரிபார்ப்பு(தன், உரை):
        return all(அ in தன்.குறிகள் or அ in தன்.பிரிப்பு for அ in உரை)

    def _சுருங்குறித்தொடர்(தன்):
        எண்கள் = ''.join(['\\u%04x' % ord(அ) for அ in தன்.குறிகள்])
        பிரிப்பு = ''.join(['\\u%04x' % ord(அ) for அ in தன்.பிரிப்பு])
        தொடர் = rf'(\-)?(([{எண்கள்}]+([{பிரிப்பு}][{எண்கள்}]*)?)|([{பிரிப்பு}][{எண்கள்}]+))'

        return தொடர்
